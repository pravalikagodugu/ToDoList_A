{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\OneDrive\\\\Documents\\\\HTML\\\\ToDo-List\\\\frontend\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [editableId, setEditableId] = useState(null);\n  const [editedTask, setEditedTask] = useState(\"\");\n  const [editedStatus, setEditedStatus] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [newStatus, setNewStatus] = useState(\"\");\n  const [newDeadline, setNewDeadline] = useState(\"\");\n  const [editedDeadline, setEditedDeadline] = useState(\"\");\n\n  // Fetch tasks from database\n  const fetchTasks = () => {\n    axios.get('http://127.0.0.1:3001/getTodoList').then(result => {\n      setTodoList(result.data);\n    }).catch(err => {\n      console.error(\"Error fetching tasks:\", err);\n      alert(\"Failed to fetch tasks. Please try again.\");\n    });\n  };\n\n  // Initial fetch\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Function to toggle the editable state for a specific row\n  const toggleEditable = id => {\n    const rowData = todoList.find(data => data._id === id);\n    if (rowData) {\n      setEditableId(id);\n      setEditedTask(rowData.task);\n      setEditedStatus(rowData.status);\n      setEditedDeadline(rowData.deadline ? new Date(rowData.deadline).toISOString().slice(0, 16) : \"\");\n    } else {\n      setEditableId(null);\n      setEditedTask(\"\");\n      setEditedStatus(\"\");\n      setEditedDeadline(\"\");\n    }\n  };\n\n  // Function to add task to the database\n  const addTask = e => {\n    e.preventDefault();\n    if (!newTask || !newStatus || !newDeadline) {\n      alert(\"All fields must be filled out.\");\n      return;\n    }\n    axios.post('http://127.0.0.1:3001/addTodoList', {\n      task: newTask,\n      status: newStatus,\n      deadline: newDeadline\n    }).then(res => {\n      // Reset form fields\n      setNewTask(\"\");\n      setNewStatus(\"\");\n      setNewDeadline(\"\");\n\n      // Refresh task list\n      fetchTasks();\n    }).catch(err => {\n      console.error(\"Error adding task:\", err);\n      alert(\"Failed to add task. Please try again.\");\n    });\n  };\n\n  // Function to save edited data to the database\n  const saveEditedTask = id => {\n    const editedData = {\n      task: editedTask,\n      status: editedStatus,\n      deadline: editedDeadline\n    };\n\n    // If the fields are empty\n    if (!editedTask || !editedStatus || !editedDeadline) {\n      alert(\"All fields must be filled out.\");\n      return;\n    }\n\n    // Updating edited data to the database through updateById API\n    axios.post('http://127.0.0.1:3001/updateTodoList/' + id, editedData).then(result => {\n      setEditableId(null);\n      setEditedTask(\"\");\n      setEditedStatus(\"\");\n      setEditedDeadline(\"\");\n      fetchTasks();\n    }).catch(err => {\n      console.error(\"Error updating task:\", err);\n      alert(\"Failed to update task. Please try again.\");\n    });\n  };\n\n  // Delete task from database\n  const deleteTask = id => {\n    // Add confirmation before delete\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this task?\");\n    if (confirmDelete) {\n      axios.delete(`http://127.0.0.1:3001/deleteTodoList/${id}`).then(result => {\n        // Refresh task list after successful deletion\n        fetchTasks();\n\n        // Reset any active editing state\n        if (editableId === id) {\n          setEditableId(null);\n          setEditedTask(\"\");\n          setEditedStatus(\"\");\n          setEditedDeadline(\"\");\n        }\n      }).catch(err => {\n        console.error(\"Error deleting task:\", err);\n        alert(\"Failed to delete task. Please try again.\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTask,\n      className: \"mb-4 bg-gray-100 p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Task\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          className: \"p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newStatus,\n          onChange: e => setNewStatus(e.target.value),\n          className: \"p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: newDeadline,\n          onChange: e => setNewDeadline(e.target.value),\n          className: \"p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2 w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-gray-50\",\n          children: editableId === todo._id ?\n          /*#__PURE__*/\n          // Editable Row\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedTask,\n                onChange: e => setEditedTask(e.target.value),\n                className: \"w-full p-1 border rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedStatus,\n                onChange: e => setEditedStatus(e.target.value),\n                className: \"w-full p-1 border rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"In Progress\",\n                  children: \"In Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Completed\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"datetime-local\",\n                value: editedDeadline,\n                onChange: e => setEditedDeadline(e.target.value),\n                className: \"w-full p-1 border rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveEditedTask(todo._id),\n                  className: \"bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setEditableId(null),\n                  className: \"bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) :\n          /*#__PURE__*/\n          // Read-only Row\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: todo.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: todo.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: todo.deadline ? new Date(todo.deadline).toLocaleString() : 'No deadline'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border p-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleEditable(todo._id),\n                  className: \"bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteTask(todo._id),\n                  className: \"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, todo._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"BxOoWAkFj9bt2Vxi539wcvjg5R0=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","todoList","setTodoList","editableId","setEditableId","editedTask","setEditedTask","editedStatus","setEditedStatus","newTask","setNewTask","newStatus","setNewStatus","newDeadline","setNewDeadline","editedDeadline","setEditedDeadline","fetchTasks","get","then","result","data","catch","err","console","error","alert","toggleEditable","id","rowData","find","_id","task","status","deadline","Date","toISOString","slice","addTask","e","preventDefault","post","res","saveEditedTask","editedData","deleteTask","confirmDelete","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","map","todo","onClick","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/pc/OneDrive/Documents/HTML/ToDo-List/frontend/src/components/Todo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Todo() {\r\n    const [todoList, setTodoList] = useState([]);\r\n    const [editableId, setEditableId] = useState(null);\r\n    const [editedTask, setEditedTask] = useState(\"\");\r\n    const [editedStatus, setEditedStatus] = useState(\"\");\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const [newStatus, setNewStatus] = useState(\"\");\r\n    const [newDeadline, setNewDeadline] = useState(\"\");\r\n    const [editedDeadline, setEditedDeadline] = useState(\"\");\r\n\r\n    // Fetch tasks from database\r\n    const fetchTasks = () => {\r\n        axios.get('http://127.0.0.1:3001/getTodoList')\r\n            .then(result => {\r\n                setTodoList(result.data)\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching tasks:\", err);\r\n                alert(\"Failed to fetch tasks. Please try again.\");\r\n            });\r\n    }\r\n\r\n    // Initial fetch\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    // Function to toggle the editable state for a specific row\r\n    const toggleEditable = (id) => {\r\n        const rowData = todoList.find((data) => data._id === id);\r\n        if (rowData) {\r\n            setEditableId(id);\r\n            setEditedTask(rowData.task);\r\n            setEditedStatus(rowData.status);\r\n            setEditedDeadline(rowData.deadline ? new Date(rowData.deadline).toISOString().slice(0,16) : \"\");\r\n        } else {\r\n            setEditableId(null);\r\n            setEditedTask(\"\");\r\n            setEditedStatus(\"\");\r\n            setEditedDeadline(\"\");\r\n        }\r\n    };\r\n\r\n    // Function to add task to the database\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        if (!newTask || !newStatus || !newDeadline) {\r\n            alert(\"All fields must be filled out.\");\r\n            return;\r\n        }\r\n\r\n        axios.post('http://127.0.0.1:3001/addTodoList', {\r\n            task: newTask,\r\n            status: newStatus,\r\n            deadline: newDeadline\r\n        })\r\n        .then(res => {\r\n            // Reset form fields\r\n            setNewTask(\"\");\r\n            setNewStatus(\"\");\r\n            setNewDeadline(\"\");\r\n\r\n            // Refresh task list\r\n            fetchTasks();\r\n        })\r\n        .catch(err => {\r\n            console.error(\"Error adding task:\", err);\r\n            alert(\"Failed to add task. Please try again.\");\r\n        });\r\n    }\r\n\r\n    // Function to save edited data to the database\r\n    const saveEditedTask = (id) => {\r\n        const editedData = {\r\n            task: editedTask,\r\n            status: editedStatus,\r\n            deadline: editedDeadline,\r\n        };\r\n\r\n        // If the fields are empty\r\n        if (!editedTask || !editedStatus || !editedDeadline) {\r\n            alert(\"All fields must be filled out.\");\r\n            return;\r\n        }\r\n\r\n        // Updating edited data to the database through updateById API\r\n        axios.post('http://127.0.0.1:3001/updateTodoList/' + id, editedData)\r\n            .then(result => {\r\n                setEditableId(null);\r\n                setEditedTask(\"\");\r\n                setEditedStatus(\"\");\r\n                setEditedDeadline(\"\");\r\n                fetchTasks();\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error updating task:\", err);\r\n                alert(\"Failed to update task. Please try again.\");\r\n            });\r\n    }\r\n\r\n    // Delete task from database\r\n    const deleteTask = (id) => {\r\n        // Add confirmation before delete\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete this task?\");\r\n        \r\n        if (confirmDelete) {\r\n            axios.delete(`http://127.0.0.1:3001/deleteTodoList/${id}`)\r\n                .then(result => {\r\n                    // Refresh task list after successful deletion\r\n                    fetchTasks();\r\n                    \r\n                    // Reset any active editing state\r\n                    if (editableId === id) {\r\n                        setEditableId(null);\r\n                        setEditedTask(\"\");\r\n                        setEditedStatus(\"\");\r\n                        setEditedDeadline(\"\");\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error deleting task:\", err);\r\n                    alert(\"Failed to delete task. Please try again.\");\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-4 max-w-4xl mx-auto\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Todo List</h1>\r\n            \r\n            {/* Add New Task Form */}\r\n            <form onSubmit={addTask} className=\"mb-4 bg-gray-100 p-4 rounded\">\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"New Task\" \r\n                        value={newTask}\r\n                        onChange={(e) => setNewTask(e.target.value)}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                    <select \r\n                        value={newStatus}\r\n                        onChange={(e) => setNewStatus(e.target.value)}\r\n                        className=\"p-2 border rounded\"\r\n                    >\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"Pending\">Pending</option>\r\n                        <option value=\"In Progress\">In Progress</option>\r\n                        <option value=\"Completed\">Completed</option>\r\n                    </select>\r\n                    <input \r\n                        type=\"datetime-local\" \r\n                        value={newDeadline}\r\n                        onChange={(e) => setNewDeadline(e.target.value)}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"mt-2 w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n                >\r\n                    Add Task\r\n                </button>\r\n            </form>\r\n\r\n            {/* Task List */}\r\n            <table className=\"w-full border-collapse\">\r\n                <thead>\r\n                    <tr className=\"bg-gray-200\">\r\n                        <th className=\"border p-2\">Task</th>\r\n                        <th className=\"border p-2\">Status</th>\r\n                        <th className=\"border p-2\">Deadline</th>\r\n                        <th className=\"border p-2\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todoList.map((todo) => (\r\n                        <tr key={todo._id} className=\"hover:bg-gray-50\">\r\n                            {editableId === todo._id ? (\r\n                                // Editable Row\r\n                                <>\r\n                                    <td className=\"border p-2\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            value={editedTask}\r\n                                            onChange={(e) => setEditedTask(e.target.value)}\r\n                                            className=\"w-full p-1 border rounded\"\r\n                                        />\r\n                                    </td>\r\n                                    <td className=\"border p-2\">\r\n                                        <select \r\n                                            value={editedStatus}\r\n                                            onChange={(e) => setEditedStatus(e.target.value)}\r\n                                            className=\"w-full p-1 border rounded\"\r\n                                        >\r\n                                            <option value=\"Pending\">Pending</option>\r\n                                            <option value=\"In Progress\">In Progress</option>\r\n                                            <option value=\"Completed\">Completed</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td className=\"border p-2\">\r\n                                        <input \r\n                                            type=\"datetime-local\" \r\n                                            value={editedDeadline}\r\n                                            onChange={(e) => setEditedDeadline(e.target.value)}\r\n                                            className=\"w-full p-1 border rounded\"\r\n                                        />\r\n                                    </td>\r\n                                    <td className=\"border p-2\">\r\n                                        <div className=\"flex justify-center space-x-2\">\r\n                                            <button \r\n                                                onClick={() => saveEditedTask(todo._id)}\r\n                                                className=\"bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\"\r\n                                            >\r\n                                                Save\r\n                                            </button>\r\n                                            <button \r\n                                                onClick={() => setEditableId(null)}\r\n                                                className=\"bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600\"\r\n                                            >\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </td>\r\n                                </>\r\n                            ) : (\r\n                                // Read-only Row\r\n                                <>\r\n                                    <td className=\"border p-2\">{todo.task}</td>\r\n                                    <td className=\"border p-2\">{todo.status}</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {todo.deadline \r\n                                            ? new Date(todo.deadline).toLocaleString() \r\n                                            : 'No deadline'}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">\r\n                                        <div className=\"flex justify-center space-x-2\">\r\n                                            <button \r\n                                                onClick={() => toggleEditable(todo._id)}\r\n                                                className=\"bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600\"\r\n                                            >\r\n                                                Edit\r\n                                            </button>\r\n                                            <button \r\n                                                onClick={() => deleteTask(todo._id)}\r\n                                                className=\"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\r\n                                            >\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </td>\r\n                                </>\r\n                            )}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}