{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\OneDrive\\\\Documents\\\\HTML\\\\ToDo-List\\\\frontend\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [editableId, setEditableId] = useState(null);\n  const [editedTask, setEditedTask] = useState(\"\");\n  const [editedStatus, setEditedStatus] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\");\n  const [newStatus, setNewStatus] = useState(\"\");\n  const [newDeadline, setNewDeadline] = useState(\"\");\n  const [editedDeadline, setEditedDeadline] = useState(\"\");\n  const [confirmDelete, setConfirmDelete] = useState(null);\n\n  // Fetch tasks from database\n  const fetchTasks = () => {\n    axios.get('http://127.0.0.1:3001/getTodoList').then(result => {\n      setTodoList(result.data);\n    }).catch(err => {\n      console.error(\"Error fetching tasks:\", err);\n      alert(\"Failed to fetch tasks. Please try again.\");\n    });\n  };\n\n  // Initial fetch\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Function to toggle the editable state for a specific row\n  const toggleEditable = id => {\n    const rowData = todoList.find(data => data._id === id);\n    if (rowData) {\n      setEditableId(id);\n      setEditedTask(rowData.task);\n      setEditedStatus(rowData.status);\n      setEditedDeadline(rowData.deadline ? new Date(rowData.deadline).toISOString().slice(0, 16) : \"\");\n    } else {\n      setEditableId(null);\n      setEditedTask(\"\");\n      setEditedStatus(\"\");\n      setEditedDeadline(\"\");\n    }\n  };\n\n  // Function to add task to the database\n  const addTask = e => {\n    e.preventDefault();\n    if (!newTask || !newStatus || !newDeadline) {\n      alert(\"All fields must be filled out.\");\n      return;\n    }\n    axios.post('http://127.0.0.1:3001/addTodoList', {\n      task: newTask,\n      status: newStatus,\n      deadline: newDeadline\n    }).then(res => {\n      // Reset form fields\n      setNewTask(\"\");\n      setNewStatus(\"\");\n      setNewDeadline(\"\");\n\n      // Refresh task list\n      fetchTasks();\n    }).catch(err => {\n      console.error(\"Error adding task:\", err);\n      alert(\"Failed to add task. Please try again.\");\n    });\n  };\n\n  // Function to save edited data to the database\n  const saveEditedTask = id => {\n    const editedData = {\n      task: editedTask,\n      status: editedStatus,\n      deadline: editedDeadline\n    };\n\n    // If the fields are empty\n    if (!editedTask || !editedStatus || !editedDeadline) {\n      alert(\"All fields must be filled out.\");\n      return;\n    }\n\n    // Updating edited data to the database through updateById API\n    axios.post('http://127.0.0.1:3001/updateTodoList/' + id, editedData).then(result => {\n      setEditableId(null);\n      setEditedTask(\"\");\n      setEditedStatus(\"\");\n      setEditedDeadline(\"\");\n      fetchTasks();\n    }).catch(err => {\n      console.error(\"Error updating task:\", err);\n      alert(\"Failed to update task. Please try again.\");\n    });\n  };\n\n  // Delete task from database\n  const deleteTask = id => {\n    // Show confirmation dialog\n    setConfirmDelete(id);\n  };\n\n  // Confirm delete task\n  const confirmDeleteTask = () => {\n    if (confirmDelete) {\n      axios.delete(`http://127.0.0.1:3001/deleteTodoList/${confirmDelete}`).then(result => {\n        fetchTasks();\n        setConfirmDelete(null);\n      }).catch(err => {\n        console.error(\"Error deleting task:\", err);\n        alert(\"Failed to delete task. Please try again.\");\n        setConfirmDelete(null);\n      });\n    }\n  };\n\n  // Cancel delete\n  const cancelDelete = () => {\n    setConfirmDelete(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTask,\n      className: \"mb-4 bg-gray-100 p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Task\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          className: \"p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newStatus,\n          onChange: e => setNewStatus(e.target.value),\n          className: \"p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: newDeadline,\n          onChange: e => setNewDeadline(e.target.value),\n          className: \"p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), confirmDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl mb-4\",\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this task?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmDeleteTask,\n            className: \"bg-red-500 text-white p-2 rounded mr-2 hover:bg-red-600\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelDelete,\n            className: \"bg-gray-300 text-black p-2 rounded hover:bg-gray-400\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border-collapse\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"hover:bg-gray-50\",\n            children: editableId === todo._id ?\n            /*#__PURE__*/\n            // Editable Row\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedTask,\n                  onChange: e => setEditedTask(e.target.value),\n                  className: \"w-full p-1 border rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editedStatus,\n                  onChange: e => setEditedStatus(e.target.value),\n                  className: \"w-full p-1 border rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"In Progress\",\n                    children: \"In Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Completed\",\n                    children: \"Completed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"datetime-local\",\n                  value: editedDeadline,\n                  onChange: e => setEditedDeadline(e.target.value),\n                  className: \"w-full p-1 border rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveEditedTask(todo._id),\n                  className: \"bg-green-500 text-white p-1 rounded mr-2 hover:bg-green-600\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setEditableId(null),\n                  className: \"bg-gray-300 text-black p-1 rounded hover:bg-gray-400\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) :\n            /*#__PURE__*/\n            // Display Row\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: todo.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: todo.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: todo.deadline ? new Date(todo.deadline).toLocaleString() : 'No deadline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleEditable(todo._id),\n                  className: \"bg-blue-500 text-white p-1 rounded mr-2 hover:bg-blue-600\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteTask(todo._id),\n                  className: \"bg-red-500 text-white p-1 rounded hover:bg-red-600\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, todo._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"dbU4znkQXJWeKfCwuPs2cLX7BTc=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","todoList","setTodoList","editableId","setEditableId","editedTask","setEditedTask","editedStatus","setEditedStatus","newTask","setNewTask","newStatus","setNewStatus","newDeadline","setNewDeadline","editedDeadline","setEditedDeadline","confirmDelete","setConfirmDelete","fetchTasks","get","then","result","data","catch","err","console","error","alert","toggleEditable","id","rowData","find","_id","task","status","deadline","Date","toISOString","slice","addTask","e","preventDefault","post","res","saveEditedTask","editedData","deleteTask","confirmDeleteTask","delete","cancelDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","map","todo","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/pc/OneDrive/Documents/HTML/ToDo-List/frontend/src/components/Todo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Todo() {\r\n    const [todoList, setTodoList] = useState([]);\r\n    const [editableId, setEditableId] = useState(null);\r\n    const [editedTask, setEditedTask] = useState(\"\");\r\n    const [editedStatus, setEditedStatus] = useState(\"\");\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const [newStatus, setNewStatus] = useState(\"\");\r\n    const [newDeadline, setNewDeadline] = useState(\"\");\r\n    const [editedDeadline, setEditedDeadline] = useState(\"\");\r\n    const [confirmDelete, setConfirmDelete] = useState(null);\r\n\r\n    // Fetch tasks from database\r\n    const fetchTasks = () => {\r\n        axios.get('http://127.0.0.1:3001/getTodoList')\r\n            .then(result => {\r\n                setTodoList(result.data)\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching tasks:\", err);\r\n                alert(\"Failed to fetch tasks. Please try again.\");\r\n            });\r\n    }\r\n\r\n    // Initial fetch\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    // Function to toggle the editable state for a specific row\r\n    const toggleEditable = (id) => {\r\n        const rowData = todoList.find((data) => data._id === id);\r\n        if (rowData) {\r\n            setEditableId(id);\r\n            setEditedTask(rowData.task);\r\n            setEditedStatus(rowData.status);\r\n            setEditedDeadline(rowData.deadline ? new Date(rowData.deadline).toISOString().slice(0,16) : \"\");\r\n        } else {\r\n            setEditableId(null);\r\n            setEditedTask(\"\");\r\n            setEditedStatus(\"\");\r\n            setEditedDeadline(\"\");\r\n        }\r\n    };\r\n\r\n    // Function to add task to the database\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        if (!newTask || !newStatus || !newDeadline) {\r\n            alert(\"All fields must be filled out.\");\r\n            return;\r\n        }\r\n\r\n        axios.post('http://127.0.0.1:3001/addTodoList', {\r\n            task: newTask,\r\n            status: newStatus,\r\n            deadline: newDeadline\r\n        })\r\n        .then(res => {\r\n            // Reset form fields\r\n            setNewTask(\"\");\r\n            setNewStatus(\"\");\r\n            setNewDeadline(\"\");\r\n\r\n            // Refresh task list\r\n            fetchTasks();\r\n        })\r\n        .catch(err => {\r\n            console.error(\"Error adding task:\", err);\r\n            alert(\"Failed to add task. Please try again.\");\r\n        });\r\n    }\r\n\r\n    // Function to save edited data to the database\r\n    const saveEditedTask = (id) => {\r\n        const editedData = {\r\n            task: editedTask,\r\n            status: editedStatus,\r\n            deadline: editedDeadline,\r\n        };\r\n\r\n        // If the fields are empty\r\n        if (!editedTask || !editedStatus || !editedDeadline) {\r\n            alert(\"All fields must be filled out.\");\r\n            return;\r\n        }\r\n\r\n        // Updating edited data to the database through updateById API\r\n        axios.post('http://127.0.0.1:3001/updateTodoList/' + id, editedData)\r\n            .then(result => {\r\n                setEditableId(null);\r\n                setEditedTask(\"\");\r\n                setEditedStatus(\"\");\r\n                setEditedDeadline(\"\");\r\n                fetchTasks();\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error updating task:\", err);\r\n                alert(\"Failed to update task. Please try again.\");\r\n            });\r\n    }\r\n\r\n    // Delete task from database\r\n    const deleteTask = (id) => {\r\n        // Show confirmation dialog\r\n        setConfirmDelete(id);\r\n    }\r\n\r\n    // Confirm delete task\r\n    const confirmDeleteTask = () => {\r\n        if (confirmDelete) {\r\n            axios.delete(`http://127.0.0.1:3001/deleteTodoList/${confirmDelete}`)\r\n                .then(result => {\r\n                    fetchTasks();\r\n                    setConfirmDelete(null);\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Error deleting task:\", err);\r\n                    alert(\"Failed to delete task. Please try again.\");\r\n                    setConfirmDelete(null);\r\n                });\r\n        }\r\n    }\r\n\r\n    // Cancel delete\r\n    const cancelDelete = () => {\r\n        setConfirmDelete(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-4 max-w-4xl mx-auto\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Todo List</h1>\r\n\r\n            {/* Add New Task Form */}\r\n            <form onSubmit={addTask} className=\"mb-4 bg-gray-100 p-4 rounded\">\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"New Task\"\r\n                        value={newTask}\r\n                        onChange={(e) => setNewTask(e.target.value)}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                    <select\r\n                        value={newStatus}\r\n                        onChange={(e) => setNewStatus(e.target.value)}\r\n                        className=\"p-2 border rounded\"\r\n                    >\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"Pending\">Pending</option>\r\n                        <option value=\"In Progress\">In Progress</option>\r\n                        <option value=\"Completed\">Completed</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"datetime-local\"\r\n                        value={newDeadline}\r\n                        onChange={(e) => setNewDeadline(e.target.value)}\r\n                        className=\"p-2 border rounded\"\r\n                    />\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"mt-2 bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n                >\r\n                    Add Task\r\n                </button>\r\n            </form>\r\n\r\n            {/* Confirmation Dialog */}\r\n            {confirmDelete && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n                    <div className=\"bg-white p-6 rounded shadow-lg\">\r\n                        <h2 className=\"text-xl mb-4\">Confirm Delete</h2>\r\n                        <p>Are you sure you want to delete this task?</p>\r\n                        <div className=\"flex justify-between mt-4\">\r\n                            <button \r\n                                onClick={confirmDeleteTask} \r\n                                className=\"bg-red-500 text-white p-2 rounded mr-2 hover:bg-red-600\"\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                            <button \r\n                                onClick={cancelDelete} \r\n                                className=\"bg-gray-300 text-black p-2 rounded hover:bg-gray-400\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Todo List Table */}\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full border-collapse\">\r\n                    <thead>\r\n                        <tr className=\"bg-gray-200\">\r\n                            <th className=\"p-2 border\">Task</th>\r\n                            <th className=\"p-2 border\">Status</th>\r\n                            <th className=\"p-2 border\">Deadline</th>\r\n                            <th className=\"p-2 border\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {todoList.map((todo) => (\r\n                            <tr key={todo._id} className=\"hover:bg-gray-50\">\r\n                                {editableId === todo._id ? (\r\n                                    // Editable Row\r\n                                    <>\r\n                                        <td className=\"p-2 border\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={editedTask}\r\n                                                onChange={(e) => setEditedTask(e.target.value)}\r\n                                                className=\"w-full p-1 border rounded\"\r\n                                            />\r\n                                        </td>\r\n                                        <td className=\"p-2 border\">\r\n                                            <select\r\n                                                value={editedStatus}\r\n                                                onChange={(e) => setEditedStatus(e.target.value)}\r\n                                                className=\"w-full p-1 border rounded\"\r\n                                            >\r\n                                                <option value=\"Pending\">Pending</option>\r\n                                                <option value=\"In Progress\">In Progress</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                            </select>\r\n                                        </td>\r\n                                        <td className=\"p-2 border\">\r\n                                            <input\r\n                                                type=\"datetime-local\"\r\n                                                value={editedDeadline}\r\n                                                onChange={(e) => setEditedDeadline(e.target.value)}\r\n                                                className=\"w-full p-1 border rounded\"\r\n                                            />\r\n                                        </td>\r\n                                        <td className=\"p-2 border\">\r\n                                            <button \r\n                                                onClick={() => saveEditedTask(todo._id)} \r\n                                                className=\"bg-green-500 text-white p-1 rounded mr-2 hover:bg-green-600\"\r\n                                            >\r\n                                                Save\r\n                                            </button>\r\n                                            <button \r\n                                                onClick={() => setEditableId(null)} \r\n                                                className=\"bg-gray-300 text-black p-1 rounded hover:bg-gray-400\"\r\n                                            >\r\n                                                Cancel\r\n                                            </button>\r\n                                        </td>\r\n                                    </>\r\n                                ) : (\r\n                                    // Display Row\r\n                                    <>\r\n                                        <td className=\"p-2 border\">{todo.task}</td>\r\n                                        <td className=\"p-2 border\">{todo.status}</td>\r\n                                        <td className=\"p-2 border\">\r\n                                            {todo.deadline \r\n                                                ? new Date(todo.deadline).toLocaleString() \r\n                                                : 'No deadline'}\r\n                                        </td>\r\n                                        <td className=\"p-2 border\">\r\n                                            <button \r\n                                                onClick={() => toggleEditable(todo._id)} \r\n                                                className=\"bg-blue-500 text-white p-1 rounded mr-2 hover:bg-blue-600\"\r\n                                            >\r\n                                                Edit\r\n                                            </button>\r\n                                            <button \r\n                                                onClick={() => deleteTask(todo._id)} \r\n                                                className=\"bg-red-500 text-white p-1 rounded hover:bg-red-600\"\r\n                                            >\r\n                                                Delete\r\n                                            </button>\r\n                                        </td>\r\n                                    </>\r\n                                )}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}