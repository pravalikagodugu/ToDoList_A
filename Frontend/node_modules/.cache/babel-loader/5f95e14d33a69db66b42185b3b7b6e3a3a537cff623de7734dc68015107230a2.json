{"ast":null,"code":"import express from 'express';\nimport bodyParser from 'body-parser';\nimport employeeRouters from './controllers/employeeRouters.js';\nimport cors from 'cors';\nconst app = express();\nconst port = 3001;\n\n// CORS configuration\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, x-access-token, x-refresh-token, _id');\n  res.header('Access-Control-Expose-Headers', 'x-access-token, x-refresh-token');\n  next();\n});\napp.use(bodyParser.json());\n\n// Routes\napp.use('/tasks', employeeRouters);\napp.on('error', err => {\n  console.error(`Error during startup: ${err.message}`);\n});\napp.listen(port, () => {\n  console.log(`App has started on port ${port}`);\n});","map":{"version":3,"names":["express","bodyParser","employeeRouters","cors","app","port","use","req","res","next","header","json","on","err","console","error","message","listen","log"],"sources":["C:/Users/pc/OneDrive/Documents/HTML/ToDo-List/frontend/src/index.js"],"sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport employeeRouters from './controllers/employeeRouters.js';\r\nimport cors from 'cors';\r\n\r\nconst app = express();\r\nconst port = 3001;\r\n\r\n// CORS configuration\r\napp.use(function (req, res, next) {\r\n    res.header('Access-Control-Allow-Origin', '*');\r\n    res.header(\r\n        'Access-Control-Allow-Methods',\r\n        'GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE'\r\n    );\r\n    res.header(\r\n        'Access-Control-Allow-Headers',\r\n        'Origin, X-Requested-With, Content-Type, Accept, x-access-token, x-refresh-token, _id'\r\n    );\r\n\r\n    res.header(\r\n        'Access-Control-Expose-Headers',\r\n        'x-access-token, x-refresh-token'\r\n    );\r\n\r\n    next();\r\n});\r\n\r\napp.use(bodyParser.json());\r\n\r\n// Routes\r\napp.use('/tasks', employeeRouters);\r\n\r\napp.on('error', (err) => {\r\n    console.error(`Error during startup: ${err.message}`);\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(`App has started on port ${port}`);\r\n});"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,IAAI,MAAM,MAAM;AAEvB,MAAMC,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAG,IAAI;;AAEjB;AACAD,GAAG,CAACE,GAAG,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;EAC9BD,GAAG,CAACE,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC;EAC9CF,GAAG,CAACE,MAAM,CACN,8BAA8B,EAC9B,8CACJ,CAAC;EACDF,GAAG,CAACE,MAAM,CACN,8BAA8B,EAC9B,sFACJ,CAAC;EAEDF,GAAG,CAACE,MAAM,CACN,+BAA+B,EAC/B,iCACJ,CAAC;EAEDD,IAAI,CAAC,CAAC;AACV,CAAC,CAAC;AAEFL,GAAG,CAACE,GAAG,CAACL,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACAP,GAAG,CAACE,GAAG,CAAC,QAAQ,EAAEJ,eAAe,CAAC;AAElCE,GAAG,CAACQ,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAK;EACrBC,OAAO,CAACC,KAAK,CAAC,yBAAyBF,GAAG,CAACG,OAAO,EAAE,CAAC;AACzD,CAAC,CAAC;AAEFZ,GAAG,CAACa,MAAM,CAACZ,IAAI,EAAE,MAAM;EACnBS,OAAO,CAACI,GAAG,CAAC,2BAA2Bb,IAAI,EAAE,CAAC;AAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}